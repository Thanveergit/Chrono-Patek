<%- include("../layout/commonHeader.ejs")%>






	<!-- breadcrumb -->
	<div class="container">
		<div class="bread-crumb flex-w p-l-25 p-r-15 p-t-30 p-lr-0-lg">
			<a href="/shope" class="stext-109 cl8 hov-cl1 trans-04">
				shop
				<i class="fa fa-angle-right m-l-9 m-r-10" aria-hidden="true"></i>
			</a>

			<span class="stext-109 cl4">
				Shoping Cart
			</span>
		</div>
	</div>
		

	<!-- Shoping Cart -->
	<form class="bg0 p-t-75 p-b-85">
		<div class="container">
			<div class="row">
				<% if(cart && cart.items.length>0){%>
				<div class="col-lg-10 col-xl-7 m-lr-auto m-b-50">
					<div class="m-l-25 m-r--38 m-lr-0-xl">
						
						<div class="wrap-table-shopping-cart">
							<table class="table-shopping-cart">
								<tr class="table_head">
								    <th class="column-1">Product</th>
								    <th class="column-2"></th>
								    <th class="column-3">Price</th>
								    <th class="column-4">Quantity</th>
								    <th class="column-5">Total</th>
								</tr>
								
								<% cart.items.forEach((item, i) => { %>
									<tr class="table_row">
									    <td class="column-1">
										   <div class="how-itemcart1" data-product-id="<%= item.productId._id %>">
											  <div class="image-container">
												 <img src="/uploads/product-images/<%= item.productId.image[0] %>" alt="IMG" class="product-image">
											  </div>
										   </div>
									    </td>
									    <td class="column-2">
										   <%= item.productId.productName %> <%= item.productId.quantity %>
									    </td>
									    <td class="column-3">
										   <% if (item.productId.offerPrice) { %>
											  <span style="text-decoration: line-through;">₹<%= item.productId.price %></span> 
											  <span>₹<%= item.productId.offerPrice %></span>
										   <% } else { %>
											  ₹<%= item.productId.price %>
										   <% } %>
									    </td>
									    <td class="column-4">
										<div class="wrap-num-product flex-w m-l-auto m-r-0">
										  <div class="btn-num-product-down cl8 hov-btn3 trans-04 flex-c-m" 
											onclick="updateQuantity('<%= item.productId.offerPrice ? item.productId.offerPrice : item.productId.price %>', '<%= item.productId.quantity %>', '<%= i %>', '<%= item.productId._id %>', 'decrement')">
											<i class="fs-16 zmdi zmdi-minus"></i>
										  </div>
									   
										  <input class="mtext-104 cl3 txt-center num-product" 
											   type="number" 
											   name="num-product1" 
											   value="<%= item.quantity %>" 
											   id="qty<%= i %>" 
											   data-max="<%= Math.min(5, item.productId.quantity) %>" 
											   readonly>
									   
										  <div class="btn-num-product-up cl8 hov-btn3 trans-04 flex-c-m" 
											id="incrementBtn<%= i %>"
											onclick="handleIncrement('<%= item.productId.offerPrice ? item.productId.offerPrice : item.productId.price %>', '<%= item.productId.quantity %>', '<%= i %>', '<%= item.productId._id %>')">
											<i class="fs-16 zmdi zmdi-plus"></i>
										  </div>
										</div>
									   </td>
									    <td class="column-5">
										   <span id="subtotal<%= i %>">
											  ₹<%= (item.productId.offerPrice ? item.productId.offerPrice : item.productId.price) * item.quantity %>
										   </span>
										   <span class="tooltip-container">
											  <button class="btn-remove-item" 
													onclick="removeCartItem('<%= item.productId._id %>', '<%= i %>')" 
													style="border: none; background: none; cursor: pointer;">
												 <i class="fs-16 zmdi zmdi-close" title="Remove item"></i>
											  </button>
										   </span>
									    </td>
									</tr>
								 <% }) %>
								 
							 </table>
							
						</div>

						
						
					</div>
				</div>

				<div class="col-sm-10 col-lg-7 col-xl-5 m-lr-auto m-b-50">
					<div class="bor10 p-lr-40 p-t-30 p-b-40 m-l-63 m-r-40 m-lr-0-xl p-lr-15-sm">
						<h4 class="mtext-109 cl2 p-b-30">
							Cart Totals
						</h4>	

						<div class="flex-w flex-t bor12 p-b-13">
							<div class="size-208">
								<span class="stext-110 cl2">
									Subtotal:
								</span>
							</div>

							<div class="size-209">
								<span class="mtext-110 cl2" id="cart-subtotal">
								    <% if (cart.items && cart.items.length > 0) { %>
									   ₹<%= cart.items.reduce((total, item) => {
										  const price = item.productId.offerPrice ? item.productId.offerPrice : item.productId.price;
										  return total + (price * item.quantity); 
									   }, 0).toFixed(2) %>
								    <% } else { %>
									   ₹0.00 
								    <% } %>
								</span>
							 </div>
							 
						</div>

						<div class="flex-w flex-t bor12 p-t-15 p-b-30">
							<div class="size-208 w-full-ssm">
								<span class="stext-110 cl2">
									Shipping:
								</span>
							</div>

							<div class="size-209 p-r-18 p-r-0-sm w-full-ssm">
								<p class="stext-111 cl6 p-t-2">
									There are no shipping methods available. Please double check your address, or contact us if you need any help.
								</p>
								
								<div class="p-t-15">
									<span class="stext-112 cl8">
										Calculate Shipping
									</span>

									<div class="rs1-select2 rs2-select2 bor8 bg0 m-b-12 m-t-9">
										<select class="js-select2" name="time">
											<option>Select a country...</option>
											<option>USA</option>
											<option>UK</option>
										</select>
										<div class="dropDownSelect2"></div>
									</div>

									<div class="bor8 bg0 m-b-12">
										<input class="stext-111 cl8 plh3 size-111 p-lr-15" type="text" name="state" placeholder="State /  country">
									</div>

									<div class="bor8 bg0 m-b-22">
										<input class="stext-111 cl8 plh3 size-111 p-lr-15" type="text" name="postcode" placeholder="Postcode / Zip">
									</div>
									
									<div class="flex-w">
										<div class="flex-c-m stext-101 cl2 size-115 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer">
											Update Totals
										</div>
									</div>
										
								</div>
							</div>
						</div>

						<div class="flex-w flex-t p-t-27 p-b-33">
							<div class="size-208">
								<span class="mtext-101 cl2">
									Total:
								</span>
							</div>

							<div class="size-209 p-t-1">
								<span class="mtext-110 cl2" id="cart-total">
									<% if (cart.items && cart.items.length > 0) { %>
										₹<%= cart.items.reduce((total, item) => {
										    const price = item.productId.offerPrice ? item.productId.offerPrice : item.productId.price;
										    return total + (price * item.quantity); 
										}, 0).toFixed(2) %>
									 <% } else { %>
										₹0.00 
									 <% } %>
								</span>
							</div>
						</div>

						<!-- <button class="flex-c-m stext-101 cl0 size-116 bg3 bor14 hov-btn3 p-lr-15 trans-04 pointer" onclick="window.location.href='/checkout'">
							Proceed to Checkout
						</button> -->

						<a href="/checkout" class="flex-c-m stext-101 cl0 size-116 bg3 bor14 hov-btn3 p-lr-15 trans-04 pointer" >
							Proceed to Checkout
						 </a>
					</div>
				</div>
				<%} else{%>
					<div class="container-fluid d-flex align-items-center justify-content-center" >
						<div class="row text-center">
						    <div class="col-12">
							   <h5 class="text-dark">Your cart is empty!</h5>
							   <p class="mt-3" style="font-size: 13px;">Explore the shop and find something you like</p>
							   <div>
								  <img src="/assets/images/cartempty.png" alt="Empty Cart" style="max-width: 220px;">
							   </div>
							   <a href="/shope" class="text-info">Shop Now</a>
						    </div>
						</div>
					 </div>
					 
					 <%}%>
			</div>
		</div>
	</form>
		
	<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	
		
	<!-- <script>
$(document).ready(function() {
    $('.remove-icon').on('click', function(event) {
        event.stopPropagation();  // Prevent click event bubbling
        const productContainer = $(this).closest('.how-itemcart1');  // Find the closest parent container
        const productId = productContainer.data('product-id');  // Get the product ID from the data attribute

        // Send a request to remove the item from the cart
        $.ajax({
    url: '/cart/remove',  // Keep using POST
    type: 'POST',
    data: { productId: productId },  // Send productId in request body
    success: function(response) {
        if (response.success) {
            console.log('Item removed successfully:', response);
            productContainer.remove();  // Remove the item from the DOM
            $('#cart-total').text(response.cartTotal);  // Update the cart total if needed
        } else {
            alert(response.message);
        }
    },
    error: function(error) {
        console.error("Error removing product:", error);
        alert("An error occurred while removing the product.");
    }
});

    });
});
	</script> -->

	<script>
	async function removeCartItem(productId, index) {
    try {
        const response = await fetch('/cart/remove', {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ productId }),
        });

        const data = await response.json();

        if (data.success) {
            // Update the UI to remove the item
            document.getElementById(`cart-item-${index}`).remove(); 
            updateCartTotal(data.cartTotal, data.itemCount);
            
            // Show a success popup notification
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: 'Item removed from cart successfully!',
                confirmButtonText: 'OK',
            });
        } else {
            console.error("Failed to remove item:", data.message);
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: data.message,
                confirmButtonText: 'OK',
            });
        }
    } catch (error) {
        console.error("Error removing item:", error);
        Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: 'An error occurred while trying to remove the item.',
            confirmButtonText: 'OK',
        });
    }
}

function updateCartTotal(cartTotal, itemCount) {
    document.getElementById('cart-total').innerText = `$${cartTotal.toFixed(2)}`;
    document.getElementById('item-count').innerText = itemCount;
}

	</script>


	<script>
// Function to check and update button state
function updateButtonState(index) {
  const qtyInput = document.getElementById(`qty${index}`);
  const incrementBtn = document.getElementById(`incrementBtn${index}`);
  const currentQty = Number(qtyInput.value);
  const maxAllowed = Number(qtyInput.dataset.max);
  
  if (currentQty >= maxAllowed || currentQty >= 5) {
    incrementBtn.classList.add('btn-disabled');
  } else {
    incrementBtn.classList.remove('btn-disabled');
  }
}

// Wrapper function for increment
function handleIncrement(price, stock, i, pId) {
  const currentQty = Number(document.getElementById(`qty${i}`).value);
  if (currentQty < Math.min(5, stock)) {
    updateQuantity(price, stock, i, pId, 'increment');
  }
}

// Call this when page loads to set initial button states
document.addEventListener('DOMContentLoaded', function() {
  const qtyInputs = document.querySelectorAll('.num-product');
  qtyInputs.forEach((input, index) => {
    updateButtonState(index);
  });
});

// Modified updateQuantity function to update button state after quantity change
const updateQuantity = (price, stock, i, pId, action) => {
    const quantity = Number(document.getElementById(`qty${i}`).value);
    const isIncrement = action === 'increment';
    
    if ((isIncrement && quantity < 5 && quantity < stock) || (!isIncrement && quantity > 1)) {
        axios.post(`/cart/${action}`, { index: i, productId: pId })
            .then((response) => {
                if (response.data.success) {
                    const newQuantity = isIncrement ? quantity + 1 : quantity - 1;
                    const subtotal = Number(newQuantity) * Number(price);
                    
                    document.getElementById(`subtotal${i}`).textContent = `₹ ${subtotal.toFixed(2)}`;
                    document.getElementById(`qty${i}`).value = newQuantity;
                    
                    // Update button state after quantity change
                    updateButtonState(i);
                    
                    updateCartTotal();
                } else {
                    Swal.fire("Error", response.data.message, "warning");
                }
            })
            .catch((error) => {
                console.error('Error updating quantity:', error);
                Swal.fire("Error", "Oops!! Something went wrong", "error");
            });
    } else {
        let message = "";
        if (isIncrement) {
            if (quantity >= 5) {
                message = "You can't buy more than 5 quantities";
            } else if (quantity >= stock) {
                message = "You reached the maximum quantity available";
            }
        } else {
            message = "Quantity cannot be less than 1";
        }
        Swal.fire("Limit Reached", message, "info");
    }
};

function updateCartTotal() {
    const rows = document.querySelectorAll('.table_row');
    let subtotal = 0;

    rows.forEach(row => {
        const subtotalElement = row.querySelector('span[id^="subtotal"]');
        if (subtotalElement) {
            // Use textContent instead of innerText for performance and accuracy
            const subtotalText = subtotalElement.textContent || subtotalElement.innerText; 
            subtotal += parseFloat(subtotalText.replace('₹', '').replace(',', '')) || 0;  
        }
    });

    console.log('Cart subtotal:', subtotal);

    const subtotalDisplay = document.getElementById('cart-subtotal');
    const totalDisplay = document.getElementById('cart-total');

    if (subtotalDisplay) {
        subtotalDisplay.textContent = '₹ ' + subtotal.toFixed(2);
    } else {
        console.error('Subtotal display element not found.');
    }

    if (totalDisplay) {
        totalDisplay.textContent = '₹ ' + subtotal.toFixed(2); 
    } else {
        console.error('Total display element not found.');
    }
}

	</script>
<style>
	.btn-disabled {
	  opacity: 0.5;
	  pointer-events: none;
	  cursor: not-allowed !important;
	}
	</style>


	
<%- include("../layout/commonFooter.ejs")%>