<%-include("../layout/commonHeader")%>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
body {
     font-family: 'Poppins-Medium';
     background-color: white;
}
.wishlist-container {
    width: 80%;
    margin: 0 auto;
    padding: 50px 0;
}

table {
    width: 100%;
    border-collapse: collapse;
    background-color: #fff;
}

table th, table td {
    padding: 20px;
    text-align: center;
    border: 1px solid #ddd;
    font-size: 16px;
    vertical-align: middle; 
}

table th {
    background-color: #f3f3f3;
    font-size: 18px;
}

table td img {
    width: 100px;
    height: auto;
    object-fit: cover;
    display: block;
    margin: 0 auto;
}

table td.product-cell {
    display: flex;
    align-items: center;
    gap: 15px;
    justify-content: center;
}

table td.product-cell img {
    flex-shrink: 0;
    margin-right: 10px;
}

table td.product-cell a {
    color: #555;
    text-align: left;
    word-break: break-word;
    width: 100px;
}

.add-to-cart-btn {
    background-color: #222;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 14px;
    text-transform: uppercase;
}

.add-to-cart-btn:hover {
    background-color: #717fe0;
}

.delete-btn {
    background: none;
    border: none;
    color: red;
    cursor: pointer;
    font-size: 18px;
}

.continue-shopping {
    margin-top: 25px;
    display: flex;
    justify-content: center;
}

.continue-shopping a {
    color: #000;
    font-size: 16px;
    text-decoration: none;
}

.continue-shopping a:hover {
    color: #717fe0;
}

    </style>

</head>
<body>

   <!-- breadcrumb -->
	<div class="container">
		<div class="bread-crumb flex-w p-l-25 p-r-15 p-t-30 p-lr-0-lg">
			<a href="/" class="stext-109 cl8 hov-cl1 trans-04">
				home
				<i class="fa fa-angle-right m-l-9 m-r-10" aria-hidden="true"></i>
			</a>
			<span class="stext-109 cl4">
				Wishlist
			</span>
		</div>
	</div>
  
    <% if(wishlist && wishlist.items && wishlist.items.length>0){%>
    <div class="wishlist-container">
        <table>
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Price</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                    <%wishlist.items.reverse().forEach(item=>{%>
                <tr>
                    <td>
                        <img src="/uploads/product-images/<%=item.productId.image[0]%>" alt="Product 1">
                        <a href="/product?id=<%item.productId%>" style="color: #555;"><%=item.productId.productName%></a>
                    </td>
                    <td>â‚¹<%=item.productId.offerPrice?item.productId.offerPrice:item.productId.price%></td>
                    <td>
                        <button class="add-to-cart-btn"data-product-id="<%= item.productId._id %>" >Add to Cart</button>
                    </td>
                    <td>
                        <button class="delete-btn remove-wishlist-btn" data-product-id="<%= item.productId._id %>">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                </tr>
                <%})%>
            </tbody>
        </table>
    </div>
    <%}else{%>
        <div class="container-fluid d-flex align-items-center justify-content-center">
            <div class="row text-center">
               <div class="col-12">
                  <h5 class="text-dark">No such product found!</h5>
                  <p class="mt-3" style="font-size: 13px;">Explore the shop and find something you like</p>
                  <div>
                     <img src="/assets/images/NoProduct.jpg" alt="Empty Cart" style="max-width: 400px;">
                  </div>
               </div>
            </div>
         </div>
        <%}%>
    
    <div class="continue-shopping">
        <a href="/shope"><i class="fas fa-shopping-cart"></i> Continue Shopping</a>
    </div>
</div>

<%-include("../layout/commonFooter")%>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<script>
    document.querySelectorAll('.add-to-cart-btn').forEach(button => {
     	button.addEventListener('click', function(event) {
       	 event.preventDefault();  

        	const productId = this.getAttribute('data-product-id');
            console.log(productId)

        // Fetch request to add the product to the cart
        	fetch('/add-to-cart', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id: productId })
        	})
        	.then(response => response.json())
        	.then(data => {
            if (data.success) {
                // SweetAlert2 popup for success
                Swal.fire({
                    icon: 'success',
                    title: 'Added to cart',
                    text: 'The product has been added to your cart successfully!',
                    timer: 2000,  
                    showConfirmButton: false,
                    position: 'bottom',  
                    toast: true
                });

                // Optionally redirect after showing the success message
                setTimeout(() => {
                    window.location.href = '/cart';  
                }, 2000);  
            } else {
                // SweetAlert2 popup for error
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: data.message || 'Failed to add the product to the cart',
                    timer: 3000,  
                    showConfirmButton: false,
                    position: 'bottom',  
                    toast: true
                });
            }
        })
        .catch(error => {
            console.error('Error adding to cart:', error);
            // SweetAlert2 popup for fetch error
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Need to login!',
                timer: 3000,  
                showConfirmButton: false,
                position: 'bottom',  
                toast: true
            });
        });
    });
});


// Function to remove a product from the wishlist
const removeFromWishlist = async (productId) => {
    try {
        const response = await axios.delete(`/removeFromWishlist/${productId}`);

        if (response.data.success) {
            // Success toast
            Swal.fire({
                icon: 'success',
                title: 'Removed from Wishlist',
                text: 'Item removed successfully',
                timer: 2000,
                showConfirmButton: false,
                position: 'bottom',
                toast: true
            }).then(() => {
                // Remove the item from DOM or refresh
                const itemElement = document.querySelector(`[data-wishlist-id="${productId}"]`);
                if (itemElement) {
                    itemElement.remove();
                } else {
                    location.reload();
                }
            });
        } else {
            // Error toast for unsuccessful removal
            Swal.fire({
                icon: 'info',
                title: 'Not Found',
                text: response.data.message || 'Item not found in wishlist',
                timer: 3000,
                showConfirmButton: false,
                position: 'bottom',
                toast: true
            });
        }
    } catch (error) {
        console.error("Error removing from wishlist:", error);
        // Error toast for failed request
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to remove item. Please try again',
            timer: 3000,
            showConfirmButton: false,
            position: 'bottom',
            toast: true
        });
    }
};

// Add this CSS for custom button styling
const style = document.createElement('style');
style.textContent = `
    .swal2-confirm-custom {
        background-color: #dc3545 !important;
        color: white !important;
        border: none !important;
        box-shadow: none !important;
        padding: 8px 16px !important;
    }
    
    .swal2-cancel-custom {
        background-color: #6c757d !important;
        color: white !important;
        border: none !important;
        box-shadow: none !important;
        padding: 8px 16px !important;
    }
`;
document.head.appendChild(style);

// Usage example
// <button onclick="removeFromWishlist('123')" data-wishlist-id="123">Remove</button>   

// Example usage: When a button is clicked to remove a product from the wishlist
document.querySelectorAll(".remove-wishlist-btn").forEach(button => {
    button.addEventListener("click", function() {
        const productId = this.getAttribute("data-product-id");
        removeFromWishlist(productId); // Call the function with the product ID
    });
});

</script>